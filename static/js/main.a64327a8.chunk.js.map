{"version":3,"sources":["core/index.ts","store/game/action-type.ts","utils/create-action.ts","store/ui/action-type.ts","store/game/actions.ts","store/game/index.ts","store/ui/state.ts","store/ui/actions.ts","store/ui/index.ts","store/options/action-type.ts","store/options/actions.ts","store/options/index.ts","store/index.ts","firebase.config.ts","components/HighScores.tsx","components/FullScreenLoading.tsx","components/LogIn.dumb.tsx","components/Modal.tsx","components/GameOverModal.tsx","components/ScoreBar.tsx","components/Game.tsx","components/Counter.tsx","components/Alert.tsx","components/MainMenu.tsx","components/Instructions.tsx","components/Screen.tsx","components/LogIn.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FieldType","ActionType","DIRECTION","UP","LEFT","RIGHT","DOWN","eq","a","b","create","width","height","i","Math","floor","j","game","snake","dot","direction","instructionQueue","isGameOver","getRandomFreeCoord","Object","objectSpread","advance","length","shift","snakeHead","nextHead","isRunningIntoWall","_ref","_ref2","slicedToArray","isLegal","isEatingItself","some","coord","concat","toConsumableArray","splice","getMatrix","matrix","Array","fill","Empty","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","_coord","Snake","err","return","_game$dot","Dot","freeCoords","forEach","row","cell","push","min","max","randomIndex","random","createAction","type","payload","changeDirection","start","size","initialState","core","reducer","state","arguments","action","instruction","latestInstruction","Screen","changeScreen","screen","currentScreen","MainMenu","setSize","setSpeed","speed","z","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Tab","rootReducer","Redux","firebaseReducer","ui","options","store","window","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","userProfile","dispatch","FullScreenLoading","index","timer","this","setInterval","clearInterval","setState","react","className","React","bind","LogInDumb","props","isLoading","FullScreenLoading_FullScreenLoading","onClick","facebook","google","onBack","onFacebook","onGoogle","Modal","classNames","join","children","GameOverModal","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isLogInOpen","buttonRef","focusButton","score","profile","isLoaded","isEmpty","saveScore","_this$props","again","back","isNotEnoughScoreVariant","isPleaseLoginVariant","isEnteredHiScoreListVariant","textBlock","key","actionsBlock","ref","unshift","openLogInScreen","components_Modal","LogIn_dumb","closeLogInScreen","el","current","focus","ScoreBar","Game","interval","onKeyDown","event","isArrowKey","code","pressUp","pressDown","pressLeft","pressRight","preventDefault","stopPropagation","swipeXPrev","swipeYPrev","swipeXSpeed","swipeYSpeed","handleTouchStart","touch","touches","item","pageX","pageY","handleTouchMove","handleTouchEnd","abs","setCssBoardHeight","setCssBoardWidth","startGameLoop","prevProps","endGameLoop","snakeLength","cells","react_default","createElement","Fragment","components_ScoreBar","components_GameOverModal","restart","toMainMenu","ms","document","addEventListener","setUpSwipeDetection","removeEventListener","stripDownSwipeDetection","uid","auth","userDisplayName","displayName","gameScore","user","documentElement","style","setProperty","toString","body","touchAction","Component","compose","withFirebase","connect","ownProps","_state$game","Error","actions","defaultFormat","Counter","valueChange","_props$min","_props$max","_props$step","step","_props$format","format","isDecDisabled","isIncDisabled","disabled","Alert","_props$actionText","actionText","onAction","formatTwoDigits","padStart","MainMenu_class","_React$Component","isCannotViewHighScoresAlertOpen","inherits","createClass","__IS_MOBILE__","requestFullscreen","startGameFromMainMenu","_loginLogoutButtonClick","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","abrupt","goToLogInScreen","logout","stop","apply","speedCounterProps","changeSpeed","sizeCounterProps","changeSize","loginButtonText","loggedInAsClassNames","username","play","components_Counter","scoresClick","goToInstructionsScreen","loginLogoutButtonClick","components_Alert","closeCannotViewHighScoresAlert","openCannotViewHighScoresAlert","goToHighScoresScreen","applyDecoratedDescriptor","prototype","getOwnPropertyDescriptor","HighScores","Instructions","LogIn","currentTab","All","Mode","sizeCounterProp","tabAllClassNames","tabModeClassNames","changeTabToAll","changeTabToMode","scores","map","_this2","filter","firebaseConnected","firebaseConnect","path","queryParams","gameScores","ordered","reverse","href","goToMainMenu","components_Screen","getLastNotGreaterThan","n","ns","App","updateSizes","onResize","isMainMenuScreen","components_MainMenu","isGameScreen","components_Game","isHighScoresScreen","components_HighScores","isInstructionsScreen","components_Instructions","isLogInScreen","components_LogIn","login","provider","w","innerWidth","h","innerHeight","sizes","cellSizeWidth","cellSizeHeight","cellSize","setProp","propName","Boolean","location","hostname","match","rootElement","getElementById","app","es","react_redux_firebase_es","src_App","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a64327a8.chunk.js","sourcesContent":["export type Coord = [number, number]\n\nexport const DIRECTION = {\n  UP: [-1, 0] as Coord,\n  LEFT: [0, -1] as Coord,\n  RIGHT: [0, 1] as Coord,\n  DOWN: [1, 0] as Coord,\n}\n\nfunction add(a: Coord, b: Coord): Coord {\n  const c0 = a[0] + b[0]\n  const c1 = a[1] + b[1]\n  return [c0, c1]\n}\n\nfunction eq(a: Coord, b: Coord): boolean {\n  return a[0] == b[0] && a[1] == b[1]\n}\n\nfunction isLegal([i, j]: Coord, width: number, height: number) {\n  return 0 <= i && i <= height - 1 && 0 <= j && j <= width - 1\n}\n\nexport type Snake = Array<Coord>\n\nexport interface Game {\n  width: number\n  height: number\n  snake: Snake\n  dot: Coord\n  direction: Coord\n  instructionQueue: Coord[]\n  isGameOver: boolean\n}\n\nexport function create(width: number, height: number): Game {\n  // snake begins horizonatlly in the middle of the board, of length 3\n  const i = Math.floor(height / 2)\n  const j = Math.floor(width / 2)\n  const snake: Snake = [\n    [i, j - 1],\n    [i, j],\n    [i, j + 1],\n  ]\n\n  // we create a temporary game without a dot (dummy illegal values)\n  const game: Game = {\n    width,\n    height,\n    snake,\n    dot: [-1, -1],\n    direction: DIRECTION.RIGHT,\n    instructionQueue: [],\n    isGameOver: false,\n  }\n\n  // then we generate the dot and thus finish generating the game\n  const dot = getRandomFreeCoord(game)\n  return {\n    ...game,\n    dot,\n  }\n}\n\nexport function advance(game: Game): Game {\n  const direction: Coord = (game.instructionQueue.length == 0)\n    ? game.direction\n    : game.instructionQueue.shift()!\n\n  // I often set initial direction as [0, 0] while debugging.\n  // The snake technically runs over itself at the same position\n  // at the next tick, so I ignore that issue here.\n  if (eq(direction, [0, 0])) return game\n\n  const snakeHead = game.snake[game.snake.length - 1]\n  const nextHead = add(snakeHead, direction)\n  const { width, height } = game\n\n  // If the snake runs into the wall, bye-bye snake.\n  // If the snake attempts cannibalism, bye-bye snake.\n  const isRunningIntoWall = !isLegal(nextHead, width, height)\n  const isEatingItself = game.snake.some(coord => eq(coord, nextHead))\n  if (isRunningIntoWall || isEatingItself) {\n    return {\n      ...game,\n      direction,\n      isGameOver: true,\n    }\n  }\n\n  // The snake is good to go, so we extend its head.\n  // We'll see if we should remove its tail or not based on if\n  // the snake is eating.\n  const snake = [\n    ...game.snake,\n    nextHead,\n  ]\n\n  // If the snake isn't eating, so we remove one coord from the tail.\n  if (!eq(game.dot, nextHead)) {\n    snake.splice(0, 1)\n    return {\n      ...game,\n      snake,\n      direction,\n    }\n  }\n\n  // The snake has eaten the dot, so we create a new one.\n  const dot = getRandomFreeCoord(game)\n  return {\n    ...game,\n    snake,\n    dot,\n    direction,\n  }\n}\n\nexport function addInstruction(game: Game, instruction: Coord): Game {\n  const latestInstruction = game.instructionQueue.length == 0\n    ? game.direction\n    : game.instructionQueue[game.instructionQueue.length - 1]\n\n  // If the instruction overlaps with the latest instruction, ignore it.\n  if (eq(latestInstruction, instruction)) return game\n\n  // If the instruction is direct oposite of the latest instruction, ignore it.\n  if (latestInstruction == DIRECTION.LEFT && instruction == DIRECTION.RIGHT) return game\n  if (latestInstruction == DIRECTION.RIGHT && instruction == DIRECTION.LEFT) return game\n  if (latestInstruction == DIRECTION.UP && instruction == DIRECTION.DOWN) return game\n  if (latestInstruction == DIRECTION.DOWN && instruction == DIRECTION.UP) return game\n\n  // Otherwise, the instruction is accepted and added to the queue.\n  const instructionQueue = [\n    ...game.instructionQueue,\n    instruction,\n  ]\n\n  return {\n    ...game,\n    instructionQueue,\n  }\n}\n\nexport enum FieldType {\n  Empty,\n  Snake,\n  Dot,\n}\n\nexport function getMatrix(game: Game): FieldType[][] {\n  const { width, height } = game\n\n  // build empty matrix, fill with \"false\" values\n  const matrix = new Array(height)\n  for (let i = 0; i < matrix.length; i++) {\n    matrix[i] = new Array(width).fill(FieldType.Empty)\n  }\n\n  for (const coord of game.snake) {\n    const [i, j] = coord\n    matrix[i][j] = FieldType.Snake\n  }\n\n  const [i, j] = game.dot\n  if (i != -1 && j != -1) {\n    matrix[i][j] = FieldType.Dot\n  }\n\n  return matrix\n}\n\nfunction randomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nfunction getRandomFreeCoord(game: Game): Coord {\n  const matrix = getMatrix(game)\n\n  const freeCoords: Coord[] = []\n  matrix.forEach((row, i) => {\n    row.forEach((cell, j) => {\n      if (cell == FieldType.Empty) {\n        freeCoords.push([i, j])\n      }\n    })\n  })\n\n  const randomIndex = randomInt(0, freeCoords.length - 1)\n  return freeCoords[randomIndex]\n}\n","enum ActionType {\n  changeDirection = 'game/changeDirection',\n  advance = 'game/advance',\n  start = 'game/start',\n}\n\nexport default ActionType\n","import * as Redux from 'redux'\n\nexport type Action<T extends string> = Redux.Action<T>\n\nexport interface ActionWithPayload<T extends string, P> extends Action<T> {\n  payload: P\n}\n\nfunction createAction<T extends string> (type: T): Action<T>\nfunction createAction<T extends string, P extends Record<string, any>> (type: T, payload: P): ActionWithPayload<T, P>\nfunction createAction<T extends string, P extends Record<string, any>> (type: T, payload?: P) {\n  return payload === undefined ? { type } : { type, payload }\n}\n\nexport default createAction\n","enum ActionType {\n  changeScreen = 'changeScreen',\n}\n\nexport default ActionType\n","import createAction from '../../utils/create-action'\nimport ActionType from './action-type'\n\nimport * as core from '../../core'\n\nexport const changeDirection = (direction: core.Coord) =>\n  createAction(ActionType.changeDirection, { direction })\n\nexport const advance = () =>\n  createAction(ActionType.advance)\n\nexport const start = (size: number) =>\n  createAction(ActionType.start, { width: size, height: size })\n","import { Reducer } from 'redux'\nimport * as core from '../../core'\nimport ActionType from './action-type'\nimport * as actions from './actions'\nimport { State } from './state'\ntype Action = GetActions<typeof import('./actions')>\n\nconst initialState: State = core.create(15, 15)\n\nconst reducer: Reducer<State, Action> = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.changeDirection:\n      return core.addInstruction(state, action.payload.direction)\n    case ActionType.advance:\n      return core.advance(state)\n    case ActionType.start:\n      return core.create(action.payload.width, action.payload.height)\n    default:\n      return state\n  }\n}\n\nexport default reducer\nexport type State = State\nexport { actions }\n","export enum Screen {\n  MainMenu,\n  HighScores,\n  Game,\n  Instructions,\n  LogIn,\n}\n\nexport interface State {\n  currentScreen: Screen\n}\n","import createAction from '../../utils/create-action'\nimport ActionType from './action-type';\nimport { Screen } from './state'\n\nexport const changeScreen = (screen: Screen) =>\n  createAction(ActionType.changeScreen, { screen })\n","import { Reducer } from 'redux'\nimport ActionType from './action-type'\nimport * as actions from './actions'\nimport { State, Screen } from './state'\ntype Action = GetActions<typeof import('./actions')>\n\nconst initialState: State = {\n  currentScreen: Screen.MainMenu,\n}\n\nconst reducer: Reducer<State, Action> = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.changeScreen:\n      return {\n        ...state,\n        currentScreen: action.payload.screen,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\nexport type State = State\nexport { actions }\n","enum ActionType {\n  setSize = 'options/setSize',\n  setSpeed = 'options/setSpeed',\n  z = 'z',\n}\n\nexport default ActionType","import createAction from '../../utils/create-action'\nimport ActionType from './action-type'\n\nexport const setSize = (size: number) => \n  createAction(ActionType.setSize, { size })\n\nexport const setSpeed = (speed: number) => \n  createAction(ActionType.setSpeed, { speed })\n\n  export const z = () => createAction(ActionType.z)\n","import { Reducer } from 'redux'\nimport ActionType from './action-type'\nimport * as actions from './actions'\nimport { State } from './state'\ntype Action = GetActions<typeof import('./actions')>\n\nconst initialState: State = {\n  size: 15,\n  speed: 5,\n}\n\nconst reducer: Reducer<State, Action> = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.setSize:\n      return {\n        ...state,\n        size: action.payload.size,\n      }\n    case ActionType.setSpeed:\n      return {\n        ...state,\n        speed: action.payload.speed,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\nexport type State = State\nexport { actions }\n","import * as Redux from 'redux'\nimport State from './state'\n\nimport * as game from './game'\nimport * as ui from './ui'\nimport * as options from './options'\n\nimport firebase from 'firebase'\nimport firebaseConfig from '../firebase.config'\nimport 'firebase/auth'\nimport 'firebase/database'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rrfConfig = {\n  userProfile: 'users', // where users' profiles are stored in database\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nconst rootReducer = Redux.combineReducers({\n  firebase: firebaseReducer,\n  game: game.default,\n  ui: ui.default,\n  options: options.default,\n})\n\nconst store = Redux.createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n)\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n}\n\nexport default store\nexport type State = State\nexport { game, ui, options, rrfProps }\n\n\n","export default {\n  apiKey: \"AIzaSyBLWR-a_1xOo7JqhdAFXuazo1V7-nYAHaU\",\n  authDomain: \"snake-game-2103.firebaseapp.com\",\n  databaseURL: \"https://snake-game-2103.firebaseio.com\",\n  projectId: \"snake-game-2103\",\n  storageBucket: \"snake-game-2103.appspot.com\",\n  messagingSenderId: \"319555104363\",\n}\n","import * as React from 'react'\nimport { connect, MapStateToProps, MapDispatchToProps } from 'react-redux'\nimport * as store from '../store'\nimport { Screen } from '../store/ui/state'\nimport bind from 'bind-decorator'\nimport { compose } from 'redux'\nimport { firebaseConnect, WithFirebaseProps, KvPairs } from 'react-redux-firebase'\nimport Counter from './Counter';\nimport { formatTwoDigits } from './MainMenu';\n\ninterface StateProps {\n  scores: KvPairs<RtdbGameScore> | undefined\n}\n\ninterface DispatchProps {\n  toMainMenu: () => void\n}\n\ninterface OwnProps {\n\n}\n\nenum Tab {\n  All,\n  Mode,\n}\n\ninterface State {\n  currentTab: Tab\n  speed: number\n  size: number\n}\n\ntype Props = StateProps & DispatchProps & OwnProps & WithFirebaseProps<any>\n\nclass HighScores extends React.Component<Props, State> {\n\n  public state = {\n    currentTab: Tab.All,\n    speed: 5,\n    size: 15,\n  }\n\n  private get scores(): (RtdbGameScore & { key: string })[] | null {\n    const { scores } = this.props\n    if (scores == null) return null\n\n    const filteredScores = this.state.currentTab == Tab.Mode\n      ? scores.filter(({ value }) => value.size == this.state.size && value.speed == this.state.speed)\n      : scores\n\n    return filteredScores.map(({ key, value }) => ({ key, ...value }))\n  }\n\n  @bind private changeTabToAll() {\n    this.setState({ currentTab: Tab.All })\n  }\n\n  @bind private changeTabToMode() {\n    this.setState({ currentTab: Tab.Mode })\n  }\n\n  @bind private changeSpeed(speed: number) {\n    this.setState({ speed })\n  }\n\n  @bind private changeSize(size: number) {\n    this.setState({ size })\n  }\n\n  public render() {\n    const speedCounterProps: React.ComponentProps<typeof Counter> = {\n      value: this.state.speed,\n      valueChange: this.changeSpeed,\n      min: 1,\n      max: 9,\n      step: 1,\n      format: formatTwoDigits,\n    }\n\n    const sizeCounterProp: React.ComponentProps<typeof Counter> = {\n      value: this.state.size,\n      valueChange: this.changeSize,\n      min: 9,\n      max: 21,\n      step: 2,\n      format: formatTwoDigits,\n    }\n\n    const tabAllClassNames: string[] = []\n    const tabModeClassNames: string[] = []\n    if (this.state.currentTab == Tab.All) tabAllClassNames.push('active')\n    if (this.state.currentTab == Tab.Mode) tabModeClassNames.push('active')\n\n    return (\n      <div className=\"screen high-scores\">\n        <div className=\"nav\">\n          <button onClick={this.changeTabToAll} className={tabAllClassNames.join(' ')}>All</button>\n          <button onClick={this.changeTabToMode} className={tabModeClassNames.join(' ')}>Mode</button>\n          <button onClick={this.props.toMainMenu}>Back</button>\n        </div>\n\n        <div className=\"main\">\n          <div className=\"title\">\n            <div className=\"name\">\n              {this.state.currentTab == Tab.All ? 'All' : 'Mode'}\n            </div>\n            {\n              this.state.currentTab == Tab.Mode &&\n              <div className=\"options\">\n                <div>\n                  <div>Speed</div>\n                  <Counter {...speedCounterProps} />\n                </div>\n                <div>\n                  <div>Size</div>\n                  <Counter {...sizeCounterProp} />\n                </div>\n              </div>\n            }\n          </div>\n\n          <div className=\"list\">\n            {\n              this.scores == null\n                ? <div className=\"loading\">Loading...</div>\n                : this.scores.length > 0\n                  ? (\n                    <table>\n                      <thead>\n                        <tr>\n                          <th>Name</th>\n                          <th className=\"right\">Scr</th>\n                          <th>Mode</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {\n                          this.scores.map((value, index) => {\n                            return (\n                              <tr key={value.user + value.size + value.speed + value.score + index}>\n                                <td>{value.userDisplayName}</td>\n                                <td className=\"right\">{value.score}</td>\n                                <td>{value.size}/{value.speed}</td>\n                              </tr>\n                            )\n                          })\n                        }\n                      </tbody>\n                    </table>\n                  )\n                  : (\n                    this.state.currentTab == Tab.All\n                      ? (\n                        <span>Apparently, nobody played the game yet...</span>\n                      )\n                      : (\n                        <span>\n                          No scores for{' '}\n                          {formatTwoDigits(this.state.speed)}/{formatTwoDigits(this.state.size)}.\n                        </span>\n                      )\n                  )\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst firebaseConnected = firebaseConnect([\n  { path: 'gameScores', queryParams: ['orderByChild=score'] },\n])\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, store.State> = (state, ownProps) => {\n  const gameScores = state.firebase.ordered.gameScores\n  if (gameScores != null) gameScores.reverse()\n  return {\n    scores: gameScores\n  }\n}\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = (dispatch, ownProps) => {\n  return {\n    toMainMenu: () => {\n      dispatch(store.ui.actions.changeScreen(Screen.MainMenu))\n    }\n  }\n}\n\nexport default (compose(\n  firebaseConnected,\n  connect(mapStateToProps, mapDispatchToProps),\n)(HighScores) as any)\n","import * as React from 'react'\nimport bind from 'bind-decorator'\n\ninterface Props {\n\n}\n\ninterface State {\n  index: number\n}\n\nexport default class FullScreenLoading extends React.Component<Props, State> {\n\n  public state = {\n    index: 0,\n  }\n\n  private timer: any\n\n  public componentDidMount() {\n    this.timer = setInterval(this.next, 100)\n  }\n\n  public componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  @bind private next() {\n    const index = (this.state.index + 1) % 6\n    this.setState({ index })\n  }\n\n  public render() {\n    return (\n      <div className=\"full-screen-loading\">\n        <span>Please wait</span>\n        {this.state.index == 0 && <span>.</span>}\n        {this.state.index == 1 && <span>..</span>}\n        {this.state.index == 2 && <span>...</span>}\n      </div>\n    )\n  }\n\n}\n","import * as React from 'react'\nimport bind from 'bind-decorator';\nimport FullScreenLoading from './FullScreenLoading';\n\ninterface Props {\n  isLoading?: boolean\n  onFacebook: () => Promise<any>\n  onGoogle: () => Promise<any>\n  onBack: () => void\n}\n\nclass LogInDumb extends React.Component<Props> {\n\n  public render() {\n    return (\n      <>\n\n        {\n          this.props.isLoading &&\n          <FullScreenLoading />\n        }\n\n        <div className=\"options\">\n          <button onClick={this.facebook}>Facebook</button>\n          <button onClick={this.google}>Google</button>\n        </div>\n\n        <div className=\"actions\">\n          <button onClick={this.props.onBack}>Back</button>\n        </div>\n\n      </>\n    )\n  }\n\n  @bind private async facebook() {\n    await this.props.onFacebook()\n    this.props.onBack()\n  }\n\n  @bind private async google() {\n    await this.props.onGoogle()\n    this.props.onBack()\n  }\n}\n\nexport default LogInDumb\n","import * as React from 'react'\n\ninterface Props {\n  className?: string\n}\n\nconst Modal: React.FunctionComponent<Props> = (props) => {\n  const classNames = ['modal']\n  if (props.className != null) classNames.push(props.className)\n  const className = classNames.join(' ')\n\n  return (\n    <div className=\"modal-wrapper\">\n      <div className={className}>\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import * as React from 'react'\nimport LogInDumb from './LogIn.dumb'\nimport bind from 'bind-decorator'\nimport Modal from './Modal'\n\ninterface Props {\n  saveScore: () => Promise<void>\n  score: number\n  again: () => void\n  back: () => void\n  profile: RtdbProfile // @todo\n  facebook: () => Promise<void>\n  google: () => Promise<void>\n}\n\ninterface State {\n  isLogInOpen: boolean\n}\n\nconst SCORE_TRESHOLD = 5\n\nclass GameOverModal extends React.Component<Props, State>  {\n\n  public state = {\n    isLogInOpen: false,\n  }\n\n  private buttonRef = React.createRef<HTMLButtonElement>()\n\n  public constructor(props: Props) {\n    super(props)\n  }\n\n  public componentDidMount() {\n    this.focusButton()\n    if (this.props.score >= SCORE_TRESHOLD && this.props.profile.isLoaded && !this.props.profile.isEmpty) {\n      this.saveScore()\n    }\n  }\n\n  public render() {\n    const { score, again, back } = this.props\n\n    const profile = !this.props.profile.isLoaded\n      ? null\n      : this.props.profile.isEmpty\n        ? null\n        : this.props.profile\n\n    const className = this.state.isLogInOpen\n      ? 'log-in'\n      : 'game-over'\n\n    const isNotEnoughScoreVariant = score < SCORE_TRESHOLD\n    const isPleaseLoginVariant = score >= SCORE_TRESHOLD && profile == null\n    const isEnteredHiScoreListVariant = score >= SCORE_TRESHOLD && profile != null\n\n    const textBlock = [\n      <h1 key={'game-over'}>Game over!</h1>,\n      <p key={'score'} className=\"score\">Score: {score}</p>,\n    ]\n\n    const actionsBlock = [\n      <button key={'main-menu'} onClick={back}>Main menu</button>,\n      <button key={'again'} ref={this.buttonRef} onClick={again}>Again?</button>,\n    ]\n\n    if (isNotEnoughScoreVariant) {\n      textBlock.push(<p key={'low-score'}>Score 5 or more for hi-score.</p>)\n    }\n\n    if (isPleaseLoginVariant) {\n      textBlock.push(<p key={'log-in-to-save'}>Log in to save score.</p>)\n      actionsBlock.unshift(<button key={'log-in-button'} onClick={this.openLogInScreen}>Log in</button>)\n    }\n\n    if (isEnteredHiScoreListVariant) {\n      textBlock.push(<p key={'entered-hi-score'}>Entered hi-score list!</p>)\n    }\n\n    return (\n      <>\n        <Modal className={className}>\n          {\n            this.state.isLogInOpen &&\n            <LogInDumb\n              onFacebook={this.props.facebook}\n              onGoogle={this.props.google}\n              onBack={this.closeLogInScreen}\n            />\n          }\n          {\n            !this.state.isLogInOpen &&\n            <>\n              <div className=\"text\">{textBlock}</div>\n              <div className=\"actions\">{actionsBlock}</div>\n            </>\n          }\n        </Modal>\n      </>\n    )\n  }\n\n  private focusButton() {\n    const el = this.buttonRef.current\n    if (el == null) return\n    el.focus()\n  }\n\n  @bind private openLogInScreen() {\n    this.setState({ isLogInOpen: true })\n  }\n\n  @bind private closeLogInScreen() {\n    this.setState({ isLogInOpen: false })\n    if (this.props.profile.isLoaded && !this.props.profile.isEmpty) {\n      this.saveScore()\n    }\n  }\n\n  @bind private saveScore() {\n    this.props.saveScore()\n  }\n\n}\n\nexport default GameOverModal\n","import * as React from 'react'\n\ninterface Props {\n  score: number\n}\n\nconst ScoreBar: React.FunctionComponent<Props> = (props) => {\n  const { score } = props\n  return (\n    <dl className=\"score-bar\">\n      <dt>Score</dt>\n      <dd>{score}</dd>\n    </dl>\n  )\n}\n\nexport default ScoreBar\n","import React from 'react'\nimport { MapStateToProps, MapDispatchToProps, connect } from 'react-redux'\nimport { compose } from 'redux'\nimport bind from 'bind-decorator'\nimport * as store from '../store'\nimport * as core from '../core'\n\nimport GameOverModal from './GameOverModal'\nimport ScoreBar from './ScoreBar'\nimport ShortInstructions from './ShortInstructions'\nimport { Screen } from '../store/ui/state'\nimport { withFirebase, WithFirebaseProps } from 'react-redux-firebase'\n// import { FirebaseProfile } from '../store/state'\n\nexport interface StateProps {\n  size: number\n  speed: number\n  matrix: core.FieldType[][]\n  isGameOver: boolean\n  profile: RtdbProfile\n  auth: { uid: string, displayName: string }\n}\n\nexport interface DispatchProps {\n  advance: () => void\n  changeDirection: (coord: core.Coord) => void\n  restart: (size: number) => void\n  toMainMenu: () => void\n}\n\nexport interface OwnProps {\n  facebook: () => Promise<void>\n  google: () => Promise<void>\n}\n\nexport type Props = StateProps & DispatchProps & OwnProps & WithFirebaseProps<any>\n\nclass Game extends React.Component<Props> {\n\n  private interval: any\n  private score: number = -1\n\n  public constructor(props: Props) {\n    super(props)\n    this.setCssBoardHeight()\n    this.setCssBoardWidth()\n    this.startGameLoop()\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    if (prevProps.size != this.props.size) {\n      this.setCssBoardHeight()\n      this.setCssBoardWidth()\n    }\n    if (!prevProps.isGameOver && this.props.isGameOver) {\n      this.endGameLoop()\n    }\n  }\n\n  public componentWillUnmount() {\n    this.endGameLoop()\n  }\n\n  public render() {\n    const { size, matrix } = this.props\n    const width = size\n    const height = size\n    let snakeLength: number = 0\n\n    const cells = []\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        const index = i * width + j\n        const cell = matrix[i][j]\n        const classNames = ['cell']\n        if (cell == core.FieldType.Snake) {\n          snakeLength++\n          classNames.push('snake')\n        }\n        if (cell == core.FieldType.Dot) classNames.push('dot')\n        cells.push(<div key={index} className={classNames.join(' ')} />)\n      }\n    }\n\n    this.score = snakeLength - 3\n\n    return (\n      <>\n        <div className=\"game\">\n          <ScoreBar score={this.score} />\n          <div className=\"board\">{cells}</div>\n          {/* <ShortInstructions /> */}\n        </div>\n        {\n          this.props.isGameOver &&\n          <GameOverModal\n            saveScore={this.saveScore}\n            again={this.restart}\n            back={this.props.toMainMenu}\n            score={this.score}\n            profile={this.props.profile}\n            facebook={this.props.facebook}\n            google={this.props.google}\n          />\n        }\n      </>\n    )\n  }\n\n  private startGameLoop() {\n    const ms = ((9 - this.props.speed) * 450 / 8) + 50\n    this.interval = setInterval(this.props.advance, ms)\n    document.addEventListener('keydown', this.onKeyDown)\n    this.setUpSwipeDetection()\n  }\n\n  private endGameLoop() {\n    clearInterval(this.interval)\n    document.removeEventListener('keydown', this.onKeyDown)\n    this.stripDownSwipeDetection()\n  }\n\n  @bind private async saveScore () {\n    if (!this.props.profile.isLoaded) {\n      return\n    }\n\n    if (this.props.profile.isEmpty) {\n      return\n    }\n\n    const uid = this.props.auth.uid\n    const userDisplayName = this.props.auth.displayName\n\n    if (uid == null) return\n\n    const gameScore: RtdbGameScore = {\n      speed: this.props.speed,\n      size: this.props.size,\n      score: this.score,\n      user: uid,\n      userDisplayName: userDisplayName,\n    }\n\n    await this.props.firebase.push('gameScores', gameScore)\n  }\n\n  @bind private restart() {\n    this.props.restart(this.props.size)\n    this.startGameLoop()\n  }\n\n  private setCssBoardWidth() {\n    const width = this.props.size\n    document.documentElement!.style.setProperty('--board-width', width.toString())\n  }\n\n  private setCssBoardHeight() {\n    const height = this.props.size\n    document.documentElement!.style.setProperty('--board-height', height.toString())\n  }\n\n  private onKeyDown = (event: KeyboardEvent) => {\n    let isArrowKey: boolean = true\n    switch (event.code) {\n      case 'ArrowUp':\n      case 'KeyW':\n        this.pressUp()\n        break\n      case 'ArrowDown':\n      case 'KeyS':\n        this.pressDown()\n        break\n      case 'ArrowLeft':\n      case 'KeyA':\n        this.pressLeft()\n        break\n      case 'ArrowRight':\n      case 'KeyD':\n        this.pressRight()\n        break\n      default:\n        isArrowKey = false\n        break\n    }\n\n    if (isArrowKey) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  private pressUp = () => this.props.changeDirection(core.DIRECTION.UP)\n  private pressDown = () => this.props.changeDirection(core.DIRECTION.DOWN)\n  private pressLeft = () => this.props.changeDirection(core.DIRECTION.LEFT)\n  private pressRight = () => this.props.changeDirection(core.DIRECTION.RIGHT)\n\n  private setUpSwipeDetection () {\n    document.addEventListener('touchstart', this.handleTouchStart, false)\n    document.addEventListener('touchmove', this.handleTouchMove, false)\n    document.addEventListener('touchend', this.handleTouchEnd, false)\n    document.body.style.touchAction = 'none'\n  }\n\n  private stripDownSwipeDetection () {\n    document.removeEventListener('touchstart', this.handleTouchStart)\n    document.removeEventListener('touchmove', this.handleTouchMove)\n    document.removeEventListener('touchend', this.handleTouchEnd)\n    document.body.style.touchAction = ''\n  }\n\n  private swipeXPrev: number = 0\n  private swipeYPrev: number = 0\n\n  private swipeXSpeed: number = 0\n  private swipeYSpeed: number = 0\n\n  private handleTouchStart = (event: TouchEvent) => {\n    event.preventDefault()\n    const touch = event.touches.item(0)\n    if (touch == null) return\n    this.swipeXPrev = touch.pageX\n    this.swipeYPrev = touch.pageY\n  }\n\n  private handleTouchMove = (event: TouchEvent) => {\n    event.preventDefault()\n    const touch = event.touches.item(0)\n    if (touch == null) return\n\n    this.swipeXSpeed = touch.pageX - this.swipeXPrev\n    this.swipeYSpeed = touch.pageY - this.swipeYPrev\n\n    this.swipeXPrev = touch.pageX\n    this.swipeYPrev = touch.pageY\n  }\n\n  private handleTouchEnd = (event: TouchEvent) => {\n    event.preventDefault()\n    \n    const swipeThreshold = 10\n    if (Math.abs(this.swipeXSpeed) >= swipeThreshold || Math.abs(this.swipeYPrev) >= swipeThreshold) {\n      if (Math.abs(this.swipeXSpeed) > Math.abs(this.swipeYSpeed)) {\n        // x is dominant\n        if (this.swipeXSpeed < 0) {\n          this.pressLeft()\n        } else {\n          this.pressRight()\n        }\n      } else {\n        // y is dominant\n        if (this.swipeYSpeed < 0) {\n          this.pressUp()\n        } else {\n          this.pressDown()\n        }\n      }\n    }\n\n    this.swipeXPrev = this.swipeYPrev = this.swipeXSpeed = this.swipeYSpeed = 0\n  }\n\n}\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, store.State> = (state: any, ownProps) => {\n  const matrix = core.getMatrix(state.game)\n  const { profile } = state.firebase\n  const auth = state.firebase.auth as any\n  const { speed } = state.options\n  const { isGameOver, width, height } = state.game\n  if (width != height) throw new Error(`Board must be square!`)\n  return { matrix, size: width, isGameOver, speed, profile, auth }\n}\n\nconst mapDispatchoProps: MapDispatchToProps<DispatchProps, OwnProps> = (dispatch, ownProps) => {\n  return {\n    advance: () => {\n      dispatch(store.game.actions.advance())\n    },\n    changeDirection: (direction: core.Coord) => {\n      dispatch(store.game.actions.changeDirection(direction))\n    },\n    restart: (size: number) => {\n      dispatch(store.game.actions.start(size))\n    },\n    toMainMenu: () => {\n      dispatch(store.ui.actions.changeScreen(Screen.MainMenu))\n    },\n  }\n}\n\nexport default (compose(\n  withFirebase,\n  connect(mapStateToProps, mapDispatchoProps),\n)(Game) as any)\n","import React from 'react'\n\nexport interface Props {\n  value: number\n  valueChange: (value: number) => void\n\n  min?: number\n  max?: number\n  step?: number\n  format?: (value: number) => string\n}\n\nconst defaultFormat = (value: number) => value.toString()\n\nconst Counter: React.FunctionComponent<Props> = (props) => {\n  const {\n    value,\n    valueChange,\n    min = -Infinity, \n    max = +Infinity, \n    step = 1,\n    format = defaultFormat,\n  } = props\n\n  const increment = () => valueChange(value + step)\n  const decrement = () => valueChange(value - step)\n\n  const isDecDisabled = value - step < min\n  const isIncDisabled = value + step > max\n\n  return (\n    <div className=\"counter\">\n      <button className=\"basic\" onClick={decrement} disabled={isDecDisabled}>{'<'}</button>\n      <span>{format(value)}</span>\n      <button className=\"basic\" onClick={increment} disabled={isIncDisabled}>{'>'}</button>\n    </div>\n  )\n}\n\nexport default Counter\n","import * as React from 'react'\nimport Modal from './Modal';\n\ninterface Props {\n  actionText?: string\n  onAction: () => void\n}\n\nconst Alert: React.FunctionComponent<Props> = (props) => {\n  const { children, actionText = 'Ok' } = props\n  return (\n    <Modal className=\"alert\">\n      <p>{children}</p>\n      <button onClick={props.onAction}>{actionText}</button>\n    </Modal>\n  )\n}\n\nexport default Alert\n","import * as React from 'react'\nimport { MapStateToProps, MapDispatchToProps, connect } from 'react-redux'\nimport * as store from '../store'\nimport Counter from './Counter';\nimport { Screen } from '../store/ui/state'\nimport bind from 'bind-decorator'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { withFirebase, WithFirebaseProps } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport Alert from './Alert';\n\nexport const formatTwoDigits = (value: number) => value.toString().padStart(2, '0')\n\ninterface StateProps {\n  speed: number\n  size: number\n  profile: RtdbProfile\n}\n\ninterface DispatchProps {\n  startGameFromMainMenu: (size: number) => void\n  goToHighScoresScreen: () => void\n  goToInstructionsScreen: () => void\n  goToLogInScreen: () => void\n\n  changeSpeed: (speed: number) => void\n  changeSize: (size: number) => void\n}\n\ninterface OwnProps {\n\n}\n\ntype Props = StateProps & DispatchProps & OwnProps & WithFirebaseProps<any>\n\ninterface State {\n  isCannotViewHighScoresAlertOpen: boolean\n}\n\nexport class MainMenu extends React.Component<Props, State> {\n\n  public state = {\n    isCannotViewHighScoresAlertOpen: false\n  }\n\n  public constructor(props: Props) {\n    super(props)\n  }\n\n  @bind private play() {\n    const isMobile = (window as any).__IS_MOBILE__\n    if (isMobile) document.body.requestFullscreen()\n    this.props.startGameFromMainMenu(this.props.size)\n  }\n\n  @bind private async loginLogoutButtonClick() {\n    if (!this.props.profile.isLoaded) return\n    if (this.props.profile.isEmpty) {\n      this.props.goToLogInScreen()\n    } else {\n      this.props.firebase.logout()\n    }\n  }\n\n  public render() {\n    const speedCounterProps: React.ComponentProps<typeof Counter> = {\n      value: this.props.speed,\n      valueChange: this.props.changeSpeed,\n      min: 1,\n      max: 9,\n      step: 1,\n      format: formatTwoDigits,\n    }\n\n    const sizeCounterProps: React.ComponentProps<typeof Counter> = {\n      value: this.props.size,\n      valueChange: this.props.changeSize,\n      min: 9,\n      max: 21,\n      step: 2,\n      format: formatTwoDigits,\n    }\n\n    const loginButtonText = !this.props.profile.isLoaded\n      ? 'Loading...'\n      : this.props.profile.isEmpty\n        ? 'Log in'\n        : 'Log out'\n\n    const loggedInAsClassNames = ['logged-in-as']\n    if (!this.props.profile.isLoaded || this.props.profile.isEmpty) loggedInAsClassNames.push('hide')\n\n    const username = this.props.profile.isLoaded && !this.props.profile.isEmpty\n      ? this.props.profile.displayName\n      : ''\n\n    return (\n      <div className=\"screen main-menu\">\n\n        <div className=\"area\">\n          <button onClick={this.play}>Play</button>\n          <div className=\"settings\">\n            <div className=\"setting\">\n              <span>Speed</span>\n              <Counter {...speedCounterProps} />\n            </div>\n            <div className=\"setting\">\n              <span>Size</span>\n              <Counter {...sizeCounterProps} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"area horizontal\">\n          <button onClick={this.scoresClick}>\n            Scores\n          </button>\n          <button onClick={this.props.goToInstructionsScreen}>\n            Rules\n          </button>\n        </div>\n\n        <div className=\"area\">\n          <button\n            disabled={!this.props.profile.isLoaded}\n            onClick={this.loginLogoutButtonClick}\n          >\n            {loginButtonText}\n          </button>\n          <span className={loggedInAsClassNames.join(' ')}>\n            Logged in as {username}\n          </span>\n        </div>\n\n        {\n          this.state.isCannotViewHighScoresAlertOpen &&\n          <Alert onAction={this.closeCannotViewHighScoresAlert}>\n            Guests cannot view scores. You must log in.\n          </Alert>\n        }\n\n      </div >\n    )\n  }\n\n  @bind private scoresClick() {\n    if (!this.props.profile.isLoaded || this.props.profile.isEmpty) {\n      this.openCannotViewHighScoresAlert()\n    } else {\n      this.props.goToHighScoresScreen()\n    }\n  }\n\n  @bind private openCannotViewHighScoresAlert() {\n    this.setState({ isCannotViewHighScoresAlertOpen: true })\n  }\n\n  @bind private closeCannotViewHighScoresAlert() {\n    this.setState({ isCannotViewHighScoresAlertOpen: false })\n  }\n\n}\n\n// @todo type\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, store.State> = (state: any, ownProps) => {\n  return {\n    speed: state.options.speed,\n    size: state.options.size,\n    profile: state.firebase.profile,\n  }\n}\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = (dispatch, ownProps) => {\n  return {\n    startGameFromMainMenu: (size: number) => {\n      dispatch(store.game.actions.start(size))\n      dispatch(store.ui.actions.changeScreen(Screen.Game))\n    },\n    goToHighScoresScreen: () => {\n      dispatch(store.ui.actions.changeScreen(Screen.HighScores))\n    },\n    goToInstructionsScreen: () => {\n      dispatch(store.ui.actions.changeScreen(Screen.Instructions))\n    },\n    goToLogInScreen: () => {\n      dispatch(store.ui.actions.changeScreen(Screen.LogIn))\n    },\n\n    changeSpeed: (speed: number) => {\n      dispatch(store.options.actions.setSpeed(speed))\n    },\n    changeSize: (size: number) => {\n      dispatch(store.options.actions.setSize(size))\n    },\n  }\n}\n\nexport default (compose(\n  withFirebase,\n  connect(mapStateToProps, mapDispatchToProps),\n)(MainMenu) as any) \n","import * as React from 'react'\nimport { connect, MapStateToProps, MapDispatchToProps } from 'react-redux'\nimport * as store from '../store'\nimport { Screen } from '../store/ui/state'\nimport bind from 'bind-decorator'\nimport { compose } from 'redux'\n\ninterface StateProps {\n}\n\ninterface DispatchProps {\n  goToMainMenu: () => void\n}\n\ninterface OwnProps {\n\n}\n\ninterface State {\n}\n\ntype Props = StateProps & DispatchProps & OwnProps\n\nclass Instructions extends React.Component<Props, State> {\n\n  public render() {\n\n    return (\n      <div className=\"screen instructions\">\n        <div className=\"panels\">\n\n          <div className=\"panel\">\n            <h2>Goal</h2>\n            <p>\n              Collect as many dots.\n              Each dot increases your length by 1.\n            </p>\n          </div>\n\n          <div className=\"panel\">\n            <h2>Careful!</h2>\n            <p>\n              Do not bump into walls.\n              Do not bump into yourself.\n            </p>\n          </div>\n\n          <div className=\"panel\">\n            <h2>Controls</h2>\n            <p>\n              Use arrow keys or WASD.\n              Alternatively, swipe across the screen.\n            </p>\n          </div>\n\n          <div className=\"panel\">\n            <h2>Credits</h2>\n            <p>\n              Made by <a href=\"https://github.com/lazarljubenovic\">@lazarljubenovic</a>.\n              Game is open source.\n              Find it on <a href=\"https://github.com/lazarljubenovic/snake\">GitHub</a>.\n            </p>\n          </div>\n\n        </div>\n        <div className=\"actions\">\n          <button onClick={this.props.goToMainMenu}>Back</button>\n        </div>\n      </div>\n    )\n  }\n\n}\n\n// const firebaseConnected = firebaseConnect([])\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, store.State> = (state, ownProps) => {\n  return {\n  }\n}\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = (dispatch, ownProps) => {\n  return {\n    goToMainMenu: () => {\n      dispatch(store.ui.actions.changeScreen(Screen.MainMenu))\n    }\n  }\n}\n\nexport default compose(\n  // firebaseConnected,\n  connect(mapStateToProps, mapDispatchToProps),\n)(Instructions)\n","import * as React from 'react'\n\ninterface Props {\n  className?: string\n}\n\nconst Screen: React.FunctionComponent<Props> = (props) => {\n  const classNames = ['screen']\n  if (props.className != null) classNames.push(props.className)\n  const className = classNames.join(' ')\n  \n  return (\n    <div className={className}>\n      { props.children }\n    </div>\n  )\n}\n\nexport default Screen\n","import * as React from 'react'\nimport { connect, MapStateToProps, MapDispatchToProps } from 'react-redux'\nimport * as store from '../store'\nimport { Screen } from '../store/ui/state'\nimport { compose } from 'redux'\nimport LogInDumb from './LogIn.dumb'\nimport ScreenCmp from './Screen'\n\ninterface StateProps {\n  profile: RtdbProfile\n}\n\ninterface DispatchProps {\n  back: () => void\n}\n\ninterface OwnProps {\n  onFacebook: () => Promise<void>\n  onGoogle: () => Promise<void>\n}\n\ninterface State {\n}\n\ntype Props = StateProps & DispatchProps & OwnProps // & WithFirebaseProps<any>\n\nclass LogIn extends React.Component<Props, State> {\n\n  public render() {\n    return (\n      <ScreenCmp className=\"log-in\">\n        <LogInDumb\n          isLoading={!this.props.profile.isLoaded}\n          onFacebook={this.props.onFacebook}\n          onGoogle={this.props.onGoogle}\n          onBack={this.props.back}\n        />\n      </ScreenCmp>\n    )\n  }\n\n}\n\n// @todo type\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, store.State> = (state: any, ownProps) => {\n  return {\n    profile: state.firebase.profile,\n  }\n}\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = (dispatch, ownProps) => {\n  return {\n    back: () => {\n      dispatch(store.ui.actions.changeScreen(Screen.MainMenu))\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n)(LogIn)\n","import * as React from 'react'\nimport Game from './components/Game'\nimport MainMenu from './components/MainMenu'\nimport HighScores from './components/HighScores'\nimport { connect, MapStateToProps, MapDispatchToProps } from 'react-redux'\nimport * as store from './store'\nimport { Screen } from './store/ui/state'\nimport Instructions from './components/Instructions'\nimport LogIn from './components/LogIn'\nimport bind from 'bind-decorator'\nimport { firebaseConnect, WithFirebaseProps } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nfunction getLastNotGreaterThan(n: number, ns: number[]): number {\n  if (n <= ns[0]) return ns[0]\n  for (let i = 1; i < ns.length; i++) {\n    if (n < ns[i]) return ns[i - 1]\n  }\n  return ns[ns.length - 1]\n}\n\ninterface StateProps {\n  isMainMenuScreen: boolean\n  isGameScreen: boolean\n  isHighScoresScreen: boolean\n  isInstructionsScreen: boolean\n  isLogInScreen: boolean\n  speed: number\n  size: number\n}\n\ninterface DispatchProps {\n  goToMainMenu: () => void\n}\n\ninterface OwnProps {\n\n}\n\ntype Props = StateProps & DispatchProps & OwnProps & WithFirebaseProps<any>\n\nclass App extends React.Component<Props> {\n\n  public componentWillMount() {\n    this.updateSizes()\n    window.addEventListener('resize', this.onResize)\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize)\n  }\n\n  public componentWillReceiveProps(props: Props) {\n    if (props.size != this.props.size || props.speed != this.props.speed) {\n      this.updateSizes()\n    }\n  }\n\n  public render() {\n    return (\n      <div>\n        {\n          this.props.isMainMenuScreen &&\n          <MainMenu />\n        }\n        {\n          this.props.isGameScreen &&\n          <Game\n            facebook={this.facebook}\n            google={this.google}\n          />\n        }\n        {\n          this.props.isHighScoresScreen &&\n          <HighScores />\n        }\n        {\n          this.props.isInstructionsScreen &&\n          <Instructions />\n        }\n        {\n          this.props.isLogInScreen &&\n          <LogIn\n            onFacebook={this.facebook}\n            onGoogle={this.google}\n          />\n        }\n      </div>\n    )\n  }\n\n  @bind private async facebook() {\n    await this.props.firebase.login({\n      provider: 'facebook',\n      type: 'popup',\n    })\n  }\n\n  @bind private async google() {\n    await this.props.firebase.login({\n      provider: 'google',\n      type: 'popup',\n    })\n  }\n\n  @bind private onResize() {\n    this.updateSizes()\n  }\n\n  private updateSizes() {\n    const w = window.innerWidth\n    const h = window.innerHeight\n\n    const sizes = [6, 12, 18, 24, 30, 36]\n    const cellSizeWidth = getLastNotGreaterThan(w / (7 * this.props.size / 6 + 1), sizes)\n    const cellSizeHeight = getLastNotGreaterThan(h / (7 * this.props.size / 6 + 3.5), sizes)\n    const cellSize = Math.min(cellSizeWidth, cellSizeHeight)\n    this.setProp('board-cell-size', cellSize + 'px')\n  }\n\n  private setProp(propName: string, value: any) {\n    document.documentElement!.style.setProperty(`--${propName}`, value)\n  }\n\n}\n\nconst firebaseConnected = firebaseConnect<OwnProps>([])\n\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, store.State> = (state, ownProps) => {\n  return {\n    isMainMenuScreen: state.ui.currentScreen == Screen.MainMenu,\n    isGameScreen: state.ui.currentScreen == Screen.Game,\n    isHighScoresScreen: state.ui.currentScreen == Screen.HighScores,\n    isInstructionsScreen: state.ui.currentScreen == Screen.Instructions,\n    isLogInScreen: state.ui.currentScreen == Screen.LogIn,\n    speed: state.options.speed,\n    size: state.options.size,\n  }\n}\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, OwnProps> = (dispatch, ownProps) => {\n  return {\n    goToMainMenu: () => {\n      dispatch(store.ui.actions.changeScreen(Screen.MainMenu))\n    }\n  }\n}\n\nexport default (compose(\n  firebaseConnected,\n  connect(mapStateToProps, mapDispatchToProps),\n)(App) as any)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store, { rrfProps } from './store'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n\nconst rootElement = document.getElementById('root') as HTMLElement\nconst app = (\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>\n)\n\nReactDOM.render(app, rootElement)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}